//==============================================================================
// Overlay Project: <PROJECT_NAME>
// main.c - Main entry point for <PROJECT_NAME> overlay
//
// Copyright (c) October 2025
//==============================================================================

#include "hardware.h"
#include "io.h"

// If using newlib/printf, uncomment:
// #include <stdio.h>
// #include <stdlib.h>

//==============================================================================
// Main Entry Point
//==============================================================================

int main(void) {
    // TODO: Implement your overlay functionality here

    // Example: Simple loop with delay
    for (int i = 0; i < 10; i++) {
        // Use raw I/O functions (always available)
        putchar('H');
        putchar('e');
        putchar('l');
        putchar('l');
        putchar('o');
        putchar(' ');
        putchar('W');
        putchar('o');
        putchar('r');
        putchar('l');
        putchar('d');
        putchar('!');
        putchar('\r');
        putchar('\n');

        // If using printf (requires PIC sysroot):
        // printf("Hello from <PROJECT_NAME>! Count: %d\r\n", i);

        // Delay
        for (volatile int j = 0; j < 1000000; j++);
    }

    // Return to SD Card Manager
    // Option 1: return from main
    return 0;

    // Option 2: call exit explicitly
    // exit(0);
}

//==============================================================================
// Notes
//==============================================================================

/*
 * Overlay Development Tips:
 *
 * 1. I/O Functions (always available):
 *    - putchar(c)  - Output single character to UART
 *    - getchar()   - Read single character from UART (blocking)
 *    - puts(str)   - Output string to UART
 *
 * 2. Using printf (requires PIC sysroot):
 *    - Uncomment #include <stdio.h>
 *    - Build PIC sysroot first (see SDK documentation)
 *    - Use printf(), sprintf(), etc. as normal
 *
 * 3. Using malloc (requires PIC sysroot):
 *    - Uncomment #include <stdlib.h>
 *    - Heap is 24KB at 0x3A000
 *    - Use malloc(), free(), etc. as normal
 *
 * 4. Hardware Access:
 *    - All MMIO registers defined in hardware.h
 *    - Direct access: UART_TX_DATA, LED_REG, etc.
 *    - See hardware.h for complete list
 *
 * 5. Returning to SD Card Manager:
 *    - Always return 0 from main() or call exit(0)
 *    - Overlay will cleanly return to menu
 *    - Do NOT use infinite loops unless intended
 *
 * 6. Memory Layout:
 *    - Code/Data: 0x18000 - 0x37FFF (128KB max)
 *    - Stack:     0x38000 - 0x39FFF (8KB)
 *    - Heap:      0x3A000 - 0x3FFFF (24KB)
 *    - See memory_config.h for details
 *
 * 7. Debugging:
 *    - Use 'make disasm' to view assembly
 *    - Use 'make size' to check memory usage
 *    - Check overlay.map for symbol locations
 */
